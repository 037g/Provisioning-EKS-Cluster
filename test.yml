---
#
# This Playbook provisions a new EKS cluster using eksctl
#
- hosts: localhost
  gather_facts: false

  vars:
    cluster_name: eks-demo-c1

  tasks:
  
    - name: Get Context.
      shell: |
              kubectl config get-contexts | grep {{ cluster_name }} | awk '{print $2}'
      register: context_result
      changed_when: false

      
    - name: Set Cluster Context Fact.
      set_fact:
          context: "{{ context_result.stdout }}"

    - name: Inject Environment Variable into ALB
      shell: |
              export EKS_CLUSTER_NAME={{ cluster_name }}
              kubectl config use-context {{ context }}
              cat alb-ingress-controller.yaml | envsubst | kubectl apply -f -
      register: result


    - debug:
        msg: "{{ result.stdout }}"

    # - name: Set Context.
    #   shell: |
    #           kubectl config get-contexts | grep {{ cluster_name }} | awk '{print $2}'
    #   register: context_result
      
    # - name: Set Context Fact.
    #   set_fact:
    #       context: "{{ context_result.stdout }}"
    
    # - debug:
    #     msg: "context is called {{ context }}"