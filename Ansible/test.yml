---
#
# This Playbook provisions a new EKS cluster using eksctl
#
- hosts: localhost
  gather_facts: false

  vars:
    kube_config: "~/.kube/config"
    k8s_resource_dir: "../k8s_resources"
    # Create -> "present" or delete "absent" deployment. 
    state: "present"
  vars_files:
    - "vars/{{ env }}.yml"
  
  pre_tasks:
    - name: Display Ansible Playbook Python Path.
      debug:
        msg: "Python Interperter at: {{ ansible_playbook_python }}"
    
    - name: Get Current Cluster's Context.
      shell: |
        kubectl config get-contexts | grep {{ cluster_name }} | awk '{print $2}'
      register: context_result
      changed_when: false

    - name: Set Cluster Context Fact.
      set_fact:
        context: "{{ context_result.stdout }}"

    - name: Print Context
      debug: 
        msg: "Working on -> {{ context }}"

  tasks:
    - name: which cluster
      debug:
        msg: 
            - "{{ cluster_name }}"
            - "{{ aws_region }}"

    - name: Check/Create IAM Policy EKS-{{ cluster_name }}-ALBIngressControllerIAMPolicy.
      iam_managed_policy:
        policy_name: EKS-{{ cluster_name }}-ALBIngressControllerIAMPolicy
        policy_description: "ALB Load Balancer Policy"
        policy: "{{ lookup('file', '{{ k8s_resource_dir }}/iam_policies/alb_iam_policy.json') }}"
        state: "{{ state }}"
      register: alb_iam_policy_result


